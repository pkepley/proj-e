'''
    Problem 14:
    Compute the longest Collatz sequence with starting value less than 10^6
    ie, if n even, next is n/2
        if n odd,  next is 3*n+1

    Solved: 2014-08-21
'''


def next_collatz(n):
    '''
    ---------------------------------------------------------------------------
    next_collatz
    ---------------------------------------------------------------------------
    Compute the next term in the Collatz sequence from n.
    '''
    if n % 2:
        return 3*n + 1
    else:
        return n//2


def collatz_sequence_length(n, collatz_memo_dict={1: 1}):
    '''
    ---------------------------------------------------------------------------
    collatz_sequence_length
    ---------------------------------------------------------------------------
    Compute the length of the Collatz sequence starting at n.

    You can optionally provide a lookup dictionary (collatz_memo_dict)
    with pre-computed sequence lengths for memoization.
    '''
    orbit = [n]
    next_term = next_collatz(n)

    while next_term not in collatz_memo_dict:
        orbit.append(next_term)
        next_term = next_collatz(next_term)

    sequence_length = collatz_memo_dict[next_term]
    for m in reversed(orbit):
        sequence_length += 1
        collatz_memo_dict[m] = sequence_length

    return collatz_memo_dict[n]


def longest_collatz_sequence(max_n, collatz_memo_dict={1: 1}):
    '''
    ---------------------------------------------------------------------------
    longest_collatz_sequence
    ---------------------------------------------------------------------------
    Find the longest Collatz sequence generated by an integer that is less than
    max_n. You can optionally provide a dictionary of

    You can optionally provide a lookup dictionary (collatz_memo_dict)
    with pre-computed sequence lengths for memoization.
    '''
    collatz_length_list = [0, 1]

    for n in range(2, max_n):
        collatz_length_list.append(
            collatz_sequence_length(n, collatz_memo_dict)
        )

    return collatz_length_list.index(max(collatz_length_list))


def solve_prob(n=10**6):
    return longest_collatz_sequence(n)


if __name__ == "__main__":
    rslt = solve_prob()
    print("Solution to Problem 14: {}".format(rslt))
